# include <stdio.h>
# include <stdlib.h>


int buscaBin (int inicio, int fim, int *vet, int elem){
	int meio;
	while (inicio <= fim) {
		meio = (inicio + fim) / 2;
		if (elem < vet[meio]){
			fim = meio - 1;
		}else if (elem > vet[meio]){
			inicio = meio + 1;
		}else{
			return 1;
		}
	}
return 0;
}

int *insertionSort(int *vet, int tam){               
	int i, j, aux;
	for(i = 1; i <= tam; i++){
		j = i;
		while(vet[j] < vet[j - 1]) {
			aux = vet[j];
			vet[j] = vet[j - 1];
            vet[j - 1] = aux;
            j--;    
			if(j == 0){
				break;
            }               
        }
	}
	return (vet);
}

int *alocar_vetor(int tam){
  int *vet;
  if (tam < 1) {
     printf ("** Erro: Parametro invalido **\n");
     return (NULL);
     }
  vet = (int *) calloc (tam+1, sizeof(int));
  if(vet == NULL) {
     printf ("** Erro: Memoria Insuficiente **");
     return (NULL);
     }
  return(vet);
}

int *liberar_vetor(int tam, int *vet)
{
  if (vet == NULL) return (NULL);
  if (tam < 1) {
     printf ("** Erro: Parametro invalido **\n");
     return (NULL);
     }
  free(vet);        
  return (NULL);  
}


int main(){
	int num, z, tam, *vet;
		scanf("%d", &tam);	
		vet = alocar_vetor(tam);		
		for(z=1;z<=tam;z++){
			scanf("%d", &vet[z]);
		}
		vet = insertionSort(vet, tam);
		for(z=1;z<=tam;z++){
			printf("%d ", vet[z]);
		}
		printf("\n");
		for(;;){
			scanf("%d", &num);
			if(num==0){
				break;
			}
			if(buscaBin(1, tam, vet, num) == 1){		
				printf("SIM");			
			}else{
				printf("NAO");
			}
			printf("\n");
		}
		vet = liberar_vetor(tam, vet);
	return 0;
}

