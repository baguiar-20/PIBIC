#include<stdio.h>
#include<stdlib.h>

void bubble_sort(int *xvet, int xdim);
int busca_binaria(int *xvet, int xpesq, int xini, int xfim);

int main(void)
{
    int *vet;
	int pesq;
	int i,j;
	int dim;
	int aux;
	int aux2;

	scanf("%d", &dim);
	
	vet = (int *) malloc(dim * sizeof(int));
	
	for (i=0; i<dim; i++)
	{		
	     scanf("%d", &vet[i]);
	}

    bubble_sort(vet, dim); 
		
	for (i=0; i<dim; i++)
	{		
	     printf("%d ", vet[i]);
	}
	
	scanf("%d", &pesq);
	
	while (pesq>0)
	{
		aux=busca_binaria(vet, pesq, 0, dim-1);

		if (aux!=-1)
		{
		     if (pesq==vet[aux])
                 printf("SIM\n");
          }    
		else 
            printf("NAO\n");

		scanf("%d", &pesq);	
	}	
	
	free(vet);
}

int busca_binaria(int *xvet, int xpesq, int xini, int xfim)
{
    int meio;
	
    meio=(xini+xfim)/2;
	
    if (xpesq == xvet[meio])
       return meio;
    else if (xini >= xfim)
		  return -1;
    else {
    		if (xpesq < xvet[meio])
        		return busca_binaria(xvet, xpesq, xini, meio-1);
	
    		if (xpesq > xvet[meio])
			return busca_binaria(xvet, xpesq, meio+1, xfim);
    }		
}

void bubble_sort(int *xvet, int xdim)
{
    int i, j;
    int aux;
     
    for (i=0; i<xdim; i++)
	{		
	     for (j=(i+1); j<xdim; j++)
	     {		
	     	if(xvet[i]>xvet[j])
            {	
               aux=xvet[i];
		 	   xvet[i]=xvet[j];
			   xvet[j]=aux;
			}			 
         }
	}
}
