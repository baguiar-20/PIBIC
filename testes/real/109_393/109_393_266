#include <stdio.h>
#include <stdlib.h>


typedef struct no {
  int info;
  struct no *prox;
} tipoNo;

typedef struct fila {
  tipoNo *ini;
  tipoNo *fim;
} tipoFila;



tipoFila* criar(){

	tipoFila* f = (tipoFila*)malloc(sizeof(tipoFila));
	f->ini= f->fim = NULL;
	return f;
}

void insere(tipoFila *f, int x){
	tipoNo* aux = malloc(sizeof(tipoNo));
	aux->info = x;
	aux->prox = NULL;
	if (f->ini == NULL)
	f->ini = aux;
	else f->fim->prox = aux;
	f->fim = aux;
}

void remover(tipoFila *f){
 
  tipoNo *aux;

   if(f->ini != NULL){
   aux = f->ini;
   f->ini= f->ini->prox;
   free(aux);}
}

/*void libera(tipoFila* f){
		tipoNo* p;
		tipoNo* q = p->ini;
		
		while (q != NULL){
			tipoNo *t = q ->prox;
			free(q);
			q = t;
		}
		
		free(f);
}*/

void imprime(tipoFila* f){
  tipoNo *p = f->ini;
 
  while (p != NULL) {
    printf("%d ", p->info);
    p = p->prox;
  }
}

void ordena(tipoFila* f){
	tipoNo  *p1, *p2;
	int aux;
	
	p1 = f->ini;
	
	while(p1 != NULL){
		p2  =  p1->prox;
		
		while(p2 != NULL){
			if(p2->info < p1->info){
				aux = p1->info;
				p1->info = p2->info;
				p2->info = aux;
				}
			p2 = p2->prox;
			}
	p1=p1->prox;
		}
	
}

int main() 
{
    tipoFila* f;
	int n;
	
    f = criar();
    
	while(1){
		scanf("%d",&n);
		if(n >= 1){
			insere(f,n);
		}
		else
		if( n == 0){
    remover(f);}
    else 
    if( n == -1)
    break;
}
	ordena(f);
    imprime(f);
 



	return 0;
}
































