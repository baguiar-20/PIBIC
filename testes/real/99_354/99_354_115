#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct elemento{
	char valor;
	struct elemento *prox;
} TElemento;

typedef struct{
	TElemento *ini;
} TPilha;

TPilha *criarpilha();
void empilha(TPilha *pilha, int n);
void desempilha(TPilha *pilha);
int seq(char l[],int len);

main(){
	char l[49], h[]= "END";
	int len;
	int x;

	scanf("%s", l);

	while(strcmp(l, h) != 0){
		len = strlen (l);

		x= seq(l,len);				

		if(x==1)
			printf("SIM\n");
		else{
			if(x==0)
				printf("NAO\n");
		}
		x=0;
		scanf("%s", l);
	}
}

TPilha *criarpilha(){
	TPilha *p;
	p = (TPilha *) malloc(sizeof(TPilha));
	p->ini = NULL;
	return p;	
}

void empilha(TPilha *pilha, int n){
	TElemento *elemento =  malloc(sizeof(TElemento));

	elemento -> valor = n;         
	elemento -> prox = NULL;
	
	if(pilha->ini != NULL)
		elemento->prox = pilha->ini;

	pilha->ini = elemento;
}

void desempilha(TPilha *pilha){
	TElemento *aux;
	aux = pilha->ini; 
	pilha->ini = aux->prox;
	free(aux);	
}

int seq(char l[],int len){
	
	TPilha *pilha;	
	pilha = criarpilha();
	TElemento *aux;

	int i,x=0;

	for(i=0;i<=len;i++){
		if(l[i] == '(' || l[i] == '[' || l[i] == ')' || l[i] == ']'){
			if(l[i] == '(' || l[i] == '['){		
				empilha(pilha, l[i]);
				aux = pilha->ini;
			}else{
				if(pilha->ini == NULL){	
					if(l[i] == ')' || l[i] == ']')
						return x;
				}else{
					if(l[i] == ')'){
						if(aux->valor == '('){
							desempilha(pilha);
							aux = pilha->ini;
						}else
							return x;
					}else{
						if(l[i] == ']'){
							if(aux->valor == '['){
								desempilha(pilha);
								aux = pilha->ini;
							}else
								return x;
						}
					}
				}					 
			}
		}
	}
	if(pilha->ini == NULL)
		x++;

	return x;
}
